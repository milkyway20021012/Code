#include <iostream>
using namespace std;

/*
描述
小明去附近的水果店买橙子，水果商贩只提供整袋购买，有每袋6个和每袋8个的包装（包装不可拆分）。
可是小明只想购买恰好n个橙子，并且尽量少的袋数方便携带。如果不能购买恰好n个橙子，小明将不会购买。

输入描述：输入一个整数n，表示小明想要购买n个橙子。( n <= 10000)
输出描述：输出一个整数表示最少需要购买的袋数，如果不能买恰好n个橙子则输出-1。
*/

// 思想：先用每袋8个去判断最多可以买几袋8个的，再看剩下的能否被六整除(若有剩) 最后再将其相加 ( 8个装最多几袋 + 被六除后的结果(前提是取余数是0))
int main()
{
    int num = 0;
    cin >> num;

    // 先确定8个装的最多可以拿几个
    for (int y = num / 8; y >= 0; --y)
    {
        // 计算剩下的
        int rest = num - 8 * y;
        if (rest % 6 == 0)
        {
            int x = rest / 6;
            int total = x + y;
            cout << total << endl;
            return 0;
        }
    }
    cout << -1 << endl;
}